user nobody;
worker_processes auto;

events {
    worker_connections 1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;
    
    # 優化設置
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    
    # Gzip 壓縮
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_types text/plain text/css text/xml text/javascript application/javascript application/xml+rss application/json;
    
    # 安全設置
    server_tokens off;  # 隱藏 nginx 版本
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    
    # 緩存設置（生產環境 CDN）
    proxy_cache_path /tmp/nginx_cache levels=1:2 keys_zone=hls_cache:10m max_size=1g inactive=10m use_temp_path=off;
    
    server {
        listen 80;
        server_name localhost;
        
        # HLS 文件服務 - 生產環境安全配置
        location /live/hls/ {
            alias /var/www/hls/;
            autoindex off;
            
            # 高級安全控制
            # 1. 檢查 Referer 頭
            if ($http_referer !~ "^https?://(localhost|127\.0\.0\.1|your-domain\.com|cdn\.your-domain\.com)") {
                return 403;
            }
            
            # 2. 檢查 Origin 頭
            if ($http_origin !~ "^https?://(localhost|127\.0\.0\.1|your-domain\.com|cdn\.your-domain\.com)") {
                return 403;
            }
            
            # 3. 檢查 User-Agent
            if ($http_user_agent ~* "(curl|wget|bot|crawler|spider)") {
                return 403;
            }
            
            # 4. 檢查請求頻率（簡單的速率限制）
            limit_req_zone $binary_remote_addr zone=hls_limit:10m rate=10r/s;
            limit_req zone=hls_limit burst=20 nodelay;
            
            # 5. 檢查文件路徑（防止目錄遍歷）
            if ($request_uri ~* "\.\.") {
                return 403;
            }
            
            # HLS 特定設置
            add_header Cache-Control "no-cache, no-store, must-revalidate";
            add_header Pragma "no-cache";
            add_header Expires "0";
            add_header Access-Control-Allow-Origin $http_origin;
            add_header Access-Control-Allow-Methods 'GET, HEAD, OPTIONS';
            add_header Access-Control-Allow-Headers 'Range, If-Range, If-Modified-Since, If-None-Match, Authorization';
            add_header Access-Control-Allow-Credentials 'true';
            add_header Access-Control-Max-Age '86400';
            
            # 文件類型
            types {
                application/vnd.apple.mpegurl m3u8;
                video/mp2t ts;
            }
            
            # 日誌
            access_log /var/log/nginx/hls_access.log;
            error_log /var/log/nginx/hls_error.log;
        }
        
        # 健康檢查
        location /health {
            access_log off;
            return 200 "live-cdn secure healthy\n";
            add_header Content-Type text/plain;
        }
        
        # 拒絕所有其他請求
        location / {
            return 404;
        }
    }
} 