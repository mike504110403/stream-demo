server:
  port: 8080
  host: "127.0.0.1"

# 測試環境多資料庫配置
databases:
  # 測試用 PostgreSQL 配置（內存資料庫或輕量級配置）
  postgresql:
    type: "postgresql"
    master:
      host: "localhost"
      port: 5432
      username: "test_user"
      password: "test_password"
      dbname: "stream_demo_test"
      sslmode: "disable"
    slave:
      host: "localhost"
      port: 5432
      username: "test_user"
      password: "test_password"
      dbname: "stream_demo_test"
      sslmode: "disable"
    pool:
      max_open_conns: 5      # 測試環境較小的連接池
      max_idle_conns: 2
      conn_max_lifetime: 300 # 5分鐘
      conn_max_idle_time: 60 # 1分鐘

  # 測試用 MySQL 配置
  mysql:
    type: "mysql"
    master:
      host: "localhost"
      port: 3306
      username: "test_user"
      password: "test_password"
      dbname: "stream_demo_test"
      sslmode: "false"
    slave:
      host: "localhost"
      port: 3306
      username: "test_user"
      password: "test_password"
      dbname: "stream_demo_test"
      sslmode: "false"
    pool:
      max_open_conns: 5
      max_idle_conns: 2
      conn_max_lifetime: 300
      conn_max_idle_time: 60

# 測試用 Redis 配置（可選）
redis:
  master:
    host: "localhost"
    port: 6379
    password: ""
    db: 15  # 使用不同的 DB 避免與開發環境衝突
  slave:
    host: "localhost"  
    port: 6379
    password: ""
    db: 15
  pool:
    max_active: 10     # 測試環境較小的連接池
    max_idle: 5
    idle_timeout: 60
    connect_timeout: 5
    read_timeout: 10
    write_timeout: 10

# 測試用緩存配置
cache:
  type: "redis"
  db: 14  # 測試緩存使用 DB 14
  default_expiration: 300  # 5分鐘
  key_prefix: "test_cache:"

# 測試用訊息配置
messaging:
  type: "redis"
  db: 13  # 測試訊息使用 DB 13
  channels:
    - "test_video_processing"
    - "test_live_updates"
    - "test_user_notifications"
    - "test_chat_messages"

jwt:
  secret: "test_secret_key_for_testing_only"
  expires_in: 3600

# 測試用 S3 配置（Mock 或本地）
storage:
  type: "s3"
  s3:
    region: "us-east-1"
    bucket: "test-stream-demo-videos"
    access_key: "TEST_ACCESS_KEY"
    secret_key: "TEST_SECRET_KEY"
    endpoint: "http://localhost:9000"  # 可以使用 MinIO 進行測試
    cdn_domain: "http://localhost:9000"

# 測試用 MediaConvert 配置（Mock）
media_convert:
  region: "us-east-1"
  endpoint: "http://localhost:8000"  # Mock endpoint
  role_arn: "arn:aws:iam::123456789012:role/TestMediaConvertRole"
  output_bucket: "test-stream-demo-processed"

gin:
  mode: "test"
  host: "0.0.0.0"
  port: 8080

# 測試用影片處理配置
video:
  max_file_size: 104857600    # 100MB (較小的測試限制)
  min_file_size: 1048576      # 1MB
  allowed_formats: ["mp4", "avi", "mov"]
  transcode_presets:
    - name: "480p"
      width: 854
      height: 480
      bitrate: 800000
    - name: "360p"
      width: 640
      height: 360
      bitrate: 500000 